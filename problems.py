from definitions import Problem, Type, Difficulty, ImplementationsDomain

problems: list[Problem] = []

problems.append(Problem(1768, 'Merge Strings Alternately', Difficulty.Easy, Type.Algrithom))
problems.append(Problem(198, 'House Robber', Difficulty.Medium, Type.Algrithom))
problems.append(Problem(213, 'House Robber II', Difficulty.Medium, Type.Algrithom))
problems.append(Problem(474, 'Ones and Zeroes', Difficulty.Medium, Type.Algrithom))
problems.append(Problem(70, 'Climbing Stairs', Difficulty.Easy, Type.Algrithom))
problems.append(Problem(8, 'String to Integer (atoi)', Difficulty.Medium, Type.Implementation, domain=ImplementationsDomain.Function))
problems.append(Problem(27, 'Remove Element', Difficulty.Easy, Type.Data_Structure))
problems.append(Problem(300, 'Longest Increasing Subsequence', Difficulty.Medium, Type.Algrithom))
problems.append(Problem(48, 'Rotate Image', Difficulty.Medium, Type.Data_Structure))
problems.append(Problem(142, 'Linked List Cycle II', Difficulty.Medium, Type.Data_Structure))
problems.append(Problem(23, 'Merge k Sorted Lists', Difficulty.Hard, Type.Data_Structure))
problems.append(Problem(19, 'Remove Nth Node From End of List', Difficulty.Medium, Type.Data_Structure))
problems.append(Problem(416, 'Partition Equal Subset Sum', Difficulty.Medium, Type.Algrithom))
problems.append(Problem(146, 'LRU Cache', Difficulty.Medium, Type.Implementation, domain=ImplementationsDomain.Data_Structure))
problems.append(Problem(51, 'N-Queens', Difficulty.Hard, Type.Algrithom))
problems.append(Problem(5, 'Longest Palindromic Substring', Difficulty.Hard, Type.Algrithom))
problems.append(Problem(140, 'Word Break II', Difficulty.Hard, Type.Algrithom))
problems.append(Problem(1143, 'Longest Common Subsequence', Difficulty.Medium, Type.Algrithom))
problems.append(Problem(827, 'Making A Large Island', Difficulty.Hard, Type.Algrithom))
problems.append(Problem(220, 'Contains Duplicate III', Difficulty.Hard, Type.Algrithom))
problems.append(Problem(134, 'Gas Station', Difficulty.Medium, Type.Algrithom))
problems.append(Problem(153, 'Find Minimum in Rotated Sorted Array', Difficulty.Medium, Type.Algrithom))
problems.append(Problem(154, 'Find Minimum in Rotated Sorted Array II', Difficulty.Hard, Type.Algrithom))
problems.append(Problem(40, 'Combination Sum II', Difficulty.Medium, Type.Algrithom))
problems.append(Problem(10, 'Regular Expression Matching', Difficulty.Hard, Type.Algrithom))
problems.append(Problem(44, 'Wildcard Matching', Difficulty.Hard, Type.Algrithom))
problems.append(Problem(72, 'Edit Distance', Difficulty.Medium, Type.Algrithom))
problems.append(Problem(1, 'Two Sum', Difficulty.Easy, Type.Algrithom))
problems.append(Problem(155, 'Min Stack', Difficulty.Medium, Type.Implementation, domain=ImplementationsDomain.Data_Structure))
problems.append(Problem(160, 'Intersection of Two Linked Lists', Difficulty.Easy, Type.Data_Structure))
problems.append(Problem(79, 'Word Search', Difficulty.Medium, Type.Algrithom))
problems.append(Problem(208, 'Implement Trie (Prefix Tree)', Difficulty.Medium, Type.Implementation, domain=ImplementationsDomain.Data_Structure))
problems.append(Problem(212, 'Word Search II', Difficulty.Hard, Type.Algrithom))
problems.append(Problem(854, 'K-Similar Strings', Difficulty.Hard, Type.Algrithom))
problems.append(Problem(1392, 'Longest Happy Prefix', Difficulty.Hard, Type.Algrithom))
problems.append(Problem(162, 'Find Peak Element', Difficulty.Medium, Type.Algrithom))
